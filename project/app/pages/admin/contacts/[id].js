import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import { useSupabaseClient } from '@supabase/auth-helpers-react';
import md from 'markdown-it';
import Layout from '../../../components/Layout.js';

export default function Contacts({ id }) {
  const [contact, setContact] = useState(null);
  const supabase = useSupabaseClient();
  const [adminStatus, setAdminStatus] = useState(null);
  const router = useRouter(); // Initialize the router

  useEffect(() => {
    const fetchContact = async () => {
      try {
        let { data, error, status } = await supabase
          .from('contacts')
          .select(`firstname, lastname, email, message`)
          .eq('id', id)
          .single();
        setContact(data);
      } catch (error) {
        console.error('Error fetching contact:', error.message);
      }
    };

    fetchContact();
  }, [id, supabase]);

  // Check for adminStatus and redirect if necessary
  useEffect(() => {
    const fetchStatus = async () => {
      try {
        const { data, error } = await supabase
          .from('profiles')
          .select('admin')
          .eq('email', user.email);

        if (error) {
          console.error(error);
          return;
        }

        // Set the admin status in state
        setAdminStatus(data[0]?.admin);
      } catch (error) {
        console.error('Error fetching admin status:', error.message);
      }
    };

    // Call the checkAdminStatus function
    fetchStatus();
  }, [supabase, router]);

  useEffect(() => {
    if (!adminStatus) {
      // If adminStatus is false, redirect to the main page
      router.push('/');
    }
  }, [adminStatus, router]);


  return (
    <Layout title="Admin Contacts" description="Generated by create next app">
      {contact && (
        <div className="overflow-hidden divide-y divide-slate-200 shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
          <div className="bg-slate-50">
            <dl className="grid grid-cols-[auto_1fr] px-3 py-4 [&_dt]:italic [&_dt]:text-slate-500 [&_dt]:pr-3">
              <dt>Name</dt>
              <dd>
                {contact.lastname}, {contact.firstname}
              </dd>
              <dt>Email</dt>
              <dd>{contact.email}</dd>
            </dl>
          </div>
          <div className="px-3 py-10 bg-white">
            <div dangerouslySetInnerHTML={{ __html: md().render(contact.message) }} />
          </div>
        </div>
      )}
    </Layout>
  );
}

export async function getServerSideProps(context) {
  return {
    props: {
      id: context.params.id,
    },
  };
}
